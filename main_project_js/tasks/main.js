// Базовий тест JavaScript і HTML
// Огляд

// Мета програми — дозволити кінцевим користувачам швидко вводити список пар ім’я/значення та керувати ним.
// Незважаючи на те, що цей тест потрібно писати без сторонньої допомоги, можна використовувати будь-який стандартний довідковий матеріал,
// який використовується під час звичайного циклу програмування
// (наприклад, онлайн-довідка чи книги). Не можна використовувати сторонні бібліотеки класів або фрагменти коду
//
// Створіть програму HTML за допомогою інтерфейсу користувача, схожого на показаний нижче. Код програми має бути написаний на HTML і JavaScript.
// Крім того, користувальницький інтерфейс має налаштовуватися залежно від того, який розмір екрана його переглядає. Наприклад,
// якщо переглядати на мобільному телефоні (тобто iPhone), сторінка повинна автоматично налаштуватися, щоб представити макет у кращий спосіб.
// Це також стосується зміни розміру браузера на робочому столі та перегляду сторінки на планшеті.
//
// Необхідні функції:
//
// Пари ім’я/значення потрібно ввести у верхнє текстове поле. Це текстове поле використовуватиметься
// кінцевим користувачем для швидкого додавання пар ім’я/значення до наведеного нижче списку.
//
// Коли пару «Ім’я/значення» збираються додати до списку, її потрібно перевірити, щоб забезпечити правильний синтаксис.
// Якщо синтаксис неправильний, пару «Ім’я/значення» не можна додавати. Формат введення пари ім’я/значення показано нижче:
// <ім'я> = <значення>
//
// Де <ім'я> — частина назви пари, а <значення> — частина значення пари. Можна додати лише дійсні пари ім’я/значення.
// Імена та значення можуть містити лише буквено-цифрові символи. Знак рівності використовується для розмежування пари,
// пробіли до та/або після знака рівності можуть бути введені кінцевим користувачем (і їх слід ігнорувати).
//
// Після натискання кнопки «Сортувати за назвою» список буде відсортовано за зростанням за назвою.
//
// Якщо натиснути кнопку «Сортувати за значенням», список буде відсортовано за зростанням значення.
//
// Після натискання кнопки «Видалити» всі вибрані елементи у списку буде видалено.

// Загальна інформація
//
// Внесіть будь-які зміни/доповнення, які, на вашу думку, необхідні для підвищення зручності використання цієї програми.
// Тримайте код чистим, добре організованим і добре прокоментованим. Якість програми має бути на тому ж рівні,
// що й для платного клієнта/роботодавця.





function addPair() {
    const nameInput = document.getElementById('nameInput');
    const valueInput = document.getElementById('valueInput');
    const pairList = document.getElementById('pairList');

    const name = nameInput.value.trim();
    const value = valueInput.value.trim();

    if (name === '' || value === '') {
        alert('Please enter both a name and a value.');
        return;
    }

    
    const row = document.createElement('tr');


    const nameCell = document.createElement('td');
    nameCell.textContent = name;
    row.appendChild(nameCell);


    const valueCell = document.createElement('td');
    valueCell.textContent = value;
    row.appendChild(valueCell);


    const actionsCell = document.createElement('td');
    const deleteButton = document.createElement('span');
    deleteButton.textContent = 'Delete';
    deleteButton.classList.add('delete-btn');
    deleteButton.onclick = () => row.remove();
    actionsCell.appendChild(deleteButton);
    row.appendChild(actionsCell);


    pairList.appendChild(row);


    nameInput.value = '';
    valueInput.value = '';
}